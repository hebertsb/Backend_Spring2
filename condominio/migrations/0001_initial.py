# Generated by Django 5.2.7 on 2025-10-14 07:47

import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('authz', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Campania',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('descripcion', models.CharField(max_length=200)),
                ('fecha_inicio', models.DateField()),
                ('fecha_fin', models.DateField()),
                ('tipo_descuento', models.CharField(choices=[('%', 'Porcentaje'), ('$', 'Monto fijo')], max_length=5)),
                ('monto', models.DecimalField(decimal_places=2, max_digits=10)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('nombre', models.CharField(max_length=100)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConfiguracionGlobalReprogramacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('clave', models.CharField(help_text='Identificador único de la configuración', max_length=100, unique=True)),
                ('valor', models.TextField(help_text='Valor de la configuración')),
                ('tipo_valor', models.CharField(choices=[('STRING', 'Texto'), ('INTEGER', 'Número entero'), ('DECIMAL', 'Número decimal'), ('BOOLEAN', 'Verdadero/Falso'), ('JSON', 'Objeto JSON'), ('LISTA', 'Lista separada por comas')], default='STRING', max_length=50)),
                ('activa', models.BooleanField(default=True)),
                ('descripcion', models.TextField(blank=True, help_text='Descripción de qué hace esta configuración', null=True)),
            ],
            options={
                'verbose_name': 'Configuración Global',
                'verbose_name_plural': 'Configuraciones Globales',
                'ordering': ['clave'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReglaReprogramacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('nombre', models.CharField(default='Regla sin nombre', help_text='Nombre descriptivo de la regla', max_length=200)),
                ('tipo_regla', models.CharField(choices=[('TIEMPO_MINIMO', 'Tiempo mínimo de anticipación'), ('TIEMPO_MAXIMO', 'Tiempo máximo para reprogramar'), ('LIMITE_REPROGRAMACIONES', 'Límite de reprogramaciones por reserva'), ('LIMITE_DIARIO', 'Límite diario de reprogramaciones por usuario'), ('DIAS_BLACKOUT', 'Días no permitidos para reprogramar'), ('HORAS_BLACKOUT', 'Horas no permitidas'), ('SERVICIOS_RESTRINGIDOS', 'Servicios con restricciones especiales'), ('CAPACIDAD_MAXIMA', 'Límite de capacidad por fecha'), ('DESCUENTO_PENALIZACION', 'Penalización por reprogramar')], default='TIEMPO_ANTICIPACION', max_length=50)),
                ('aplicable_a', models.CharField(choices=[('ALL', 'Todos los usuarios'), ('CLIENTE', 'Solo clientes'), ('ADMIN', 'Solo administradores'), ('OPERADOR', 'Solo operadores')], default='ALL', max_length=50)),
                ('descripcion', models.CharField(default='Descripción pendiente', max_length=150)),
                ('limite_hora', models.PositiveIntegerField(blank=True, help_text='Horas antes del evento para permitir reprogramación', null=True)),
                ('condiciones', models.TextField(blank=True, null=True)),
                ('valor_numerico', models.IntegerField(blank=True, help_text='Para límites numéricos', null=True)),
                ('valor_decimal', models.DecimalField(blank=True, decimal_places=2, help_text='Para porcentajes y decimales', max_digits=10, null=True)),
                ('valor_texto', models.TextField(blank=True, help_text='Para listas, JSON, etc.', null=True)),
                ('valor_booleano', models.BooleanField(blank=True, help_text='Para reglas si/no', null=True)),
                ('fecha_inicio_vigencia', models.DateField(blank=True, null=True)),
                ('fecha_fin_vigencia', models.DateField(blank=True, null=True)),
                ('activa', models.BooleanField(default=True)),
                ('prioridad', models.IntegerField(default=0, help_text='Mayor número = mayor prioridad')),
                ('mensaje_error', models.TextField(blank=True, help_text='Mensaje personalizado cuando no se cumple', null=True)),
                ('condiciones_extras', models.JSONField(blank=True, default=dict, help_text='Condiciones adicionales en JSON')),
            ],
            options={
                'verbose_name': 'Regla de Reprogramación',
                'verbose_name_plural': 'Reglas de Reprogramación',
                'ordering': ['-prioridad', '-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('asunto', models.CharField(max_length=150)),
                ('descripcion', models.TextField()),
                ('estado', models.CharField(choices=[('Abierto', 'Abierto'), ('Asignado', 'Asignado'), ('Respondido', 'Respondido'), ('Cerrado', 'Cerrado')], default='Abierto', max_length=20)),
                ('prioridad', models.CharField(blank=True, max_length=10, null=True)),
                ('cerrado_en', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Visitante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('nombre', models.CharField(max_length=100)),
                ('apellido', models.CharField(max_length=100)),
                ('fecha_nac', models.DateField()),
                ('nacionalidad', models.CharField(max_length=100)),
                ('nro_doc', models.CharField(max_length=50)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('telefono', models.CharField(blank=True, max_length=20, null=True)),
                ('es_titular', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Cupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('nro_usos', models.PositiveIntegerField(default=0)),
                ('cantidad_max', models.PositiveIntegerField(default=0)),
                ('campania', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cupones', to='condominio.campania')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Paquete',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('nombre', models.CharField(help_text='Nombre del paquete turístico', max_length=200)),
                ('descripcion', models.TextField(help_text='Descripción detallada del paquete')),
                ('duracion', models.CharField(help_text='Duración total del paquete (ej: 3 días, 1 semana)', max_length=50)),
                ('precio_base', models.DecimalField(decimal_places=2, help_text='Precio base del paquete completo en USD', max_digits=10)),
                ('precio_bob', models.DecimalField(blank=True, decimal_places=2, help_text='Precio en bolivianos (se calcula automáticamente)', max_digits=10, null=True)),
                ('cupos_disponibles', models.PositiveIntegerField(default=20, help_text='Número de cupos disponibles para este paquete')),
                ('cupos_ocupados', models.PositiveIntegerField(default=0, help_text='Número de cupos ya reservados')),
                ('fecha_inicio', models.DateField(help_text='Fecha de inicio de disponibilidad')),
                ('fecha_fin', models.DateField(help_text='Fecha de fin de disponibilidad')),
                ('estado', models.CharField(choices=[('Activo', 'Activo'), ('Inactivo', 'Inactivo'), ('Agotado', 'Agotado')], default='Activo', max_length=10)),
                ('destacado', models.BooleanField(default=False, help_text='Mostrar como paquete destacado')),
                ('imagen_principal', models.URLField(blank=True, help_text='URL de la imagen principal del paquete', max_length=500, null=True)),
                ('punto_salida', models.CharField(help_text='Punto de salida del paquete turístico', max_length=255)),
                ('incluye', models.JSONField(blank=True, default=list, help_text='Lista de lo que incluye el paquete (transporte, hotel, guía, etc.)')),
                ('no_incluye', models.JSONField(blank=True, default=list, help_text='Lista de lo que NO incluye el paquete')),
                ('campania', models.ForeignKey(blank=True, help_text='Campaña de descuento aplicable a este paquete', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='paquetes_con_descuento', to='condominio.campania')),
            ],
            options={
                'verbose_name': 'Paquete Turístico',
                'verbose_name_plural': 'Paquetes Turísticos',
                'ordering': ['-destacado', '-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('fecha', models.DateField()),
                ('fecha_inicio', models.DateTimeField(blank=True, help_text='Fecha y hora específica del servicio', null=True)),
                ('fecha_fin', models.DateTimeField(blank=True, help_text='Fecha y hora de finalización', null=True)),
                ('estado', models.CharField(choices=[('PENDIENTE', 'Pendiente'), ('CONFIRMADA', 'Confirmada'), ('PAGADA', 'Pagada'), ('CANCELADA', 'Cancelada'), ('COMPLETADA', 'Completada'), ('REPROGRAMADA', 'Reprogramada')], default='PENDIENTE', max_length=20)),
                ('total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('moneda', models.CharField(default='BOB', max_length=10)),
                ('fecha_original', models.DateTimeField(blank=True, help_text='Fecha original antes de reprogramar', null=True)),
                ('fecha_reprogramacion', models.DateTimeField(blank=True, help_text='Última fecha de reprogramación', null=True)),
                ('numero_reprogramaciones', models.IntegerField(default=0, help_text='Cantidad de veces reprogramada')),
                ('motivo_reprogramacion', models.CharField(blank=True, max_length=255, null=True)),
                ('cupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reservas', to='condominio.cupon')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Reprogramacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('fecha_solicitud', models.DateField()),
                ('nueva_fecha', models.DateField()),
                ('estado', models.CharField(choices=[('Pendiente', 'Pendiente'), ('Aprobado', 'Aprobado'), ('Rechazada', 'Rechazada')], default='Pendiente', max_length=20)),
                ('tipo', models.CharField(choices=[('Voluntaria', 'Voluntaria'), ('Forzada', 'Forzada')], max_length=20)),
                ('reserva', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reprogramaciones', to='condominio.reserva')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Pago',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('monto', models.DecimalField(decimal_places=2, max_digits=10)),
                ('metodo', models.CharField(choices=[('Tarjeta', 'Tarjeta'), ('Transferencia', 'Transferencia'), ('Efectivo', 'Efectivo')], max_length=20)),
                ('fecha_pago', models.DateField()),
                ('estado', models.CharField(choices=[('Confirmado', 'Confirmado'), ('Pendiente', 'Pendiente'), ('Fallido', 'Fallido')], max_length=20)),
                ('url_stripe', models.URLField(blank=True, max_length=255, null=True)),
                ('reserva', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pagos', to='condominio.reserva')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Servicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('titulo', models.CharField(max_length=255)),
                ('descripcion', models.TextField()),
                ('duracion', models.CharField(max_length=50)),
                ('capacidad_max', models.IntegerField()),
                ('punto_encuentro', models.CharField(max_length=255)),
                ('estado', models.CharField(choices=[('Activo', 'Activo'), ('Inactivo', 'Inactivo')], default='Activo', max_length=10)),
                ('imagen_url', models.URLField(blank=True, help_text='URL de la imagen representativa del servicio', max_length=500, null=True)),
                ('precio_usd', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Precio en dólares del servicio', max_digits=10)),
                ('servicios_incluidos', models.JSONField(blank=True, default=list, help_text='Lista de servicios incluidos (ej: Guía, Transporte, Hotel)')),
                ('categoria', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='condominio.categoria')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PaqueteServicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('dia', models.PositiveIntegerField(help_text='Día del itinerario (1, 2, 3, etc.)')),
                ('orden', models.PositiveIntegerField(default=1, help_text='Orden dentro del día')),
                ('hora_inicio', models.TimeField(blank=True, help_text='Hora de inicio del servicio', null=True)),
                ('hora_fin', models.TimeField(blank=True, help_text='Hora de finalización del servicio', null=True)),
                ('notas', models.TextField(blank=True, help_text='Notas específicas del servicio en este paquete', null=True)),
                ('punto_encuentro_override', models.CharField(blank=True, help_text='Punto de encuentro específico para este paquete (si difiere del servicio)', max_length=255, null=True)),
                ('paquete', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='condominio.paquete')),
                ('servicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='condominio.servicio')),
            ],
            options={
                'verbose_name': 'Servicio en Paquete',
                'verbose_name_plural': 'Servicios en Paquetes',
                'ordering': ['dia', 'orden'],
                'abstract': False,
                'unique_together': {('paquete', 'servicio', 'dia', 'orden')},
            },
        ),
        migrations.AddField(
            model_name='paquete',
            name='servicios',
            field=models.ManyToManyField(help_text='Servicios/destinos incluidos en este paquete', related_name='paquetes', through='condominio.PaqueteServicio', to='condominio.servicio'),
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('nombre', models.CharField(max_length=100)),
                ('rubro', models.CharField(blank=True, max_length=100, null=True)),
                ('num_viajes', models.PositiveIntegerField(default=0)),
                ('telefono', models.CharField(blank=True, max_length=50, null=True)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True)),
                ('genero', models.CharField(blank=True, max_length=5, null=True)),
                ('documento_identidad', models.CharField(blank=True, max_length=100, null=True)),
                ('pais', models.CharField(blank=True, max_length=100, null=True)),
                ('rol', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='usuarios', to='authz.rol')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='TicketMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('texto', models.TextField()),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='messages', to='condominio.ticket')),
                ('autor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mensajes_soporte', to='condominio.usuario')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='ticket',
            name='agente',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tickets_asignados', to='condominio.usuario'),
        ),
        migrations.AddField(
            model_name='ticket',
            name='creador',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tickets_creados', to='condominio.usuario'),
        ),
        migrations.AddField(
            model_name='servicio',
            name='proveedor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='condominio.usuario'),
        ),
        migrations.AddField(
            model_name='reserva',
            name='cliente',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to='condominio.usuario'),
        ),
        migrations.AddField(
            model_name='reserva',
            name='reprogramado_por',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reprogramaciones_realizadas', to='condominio.usuario'),
        ),
        migrations.CreateModel(
            name='Notificacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('tipo', models.CharField(choices=[('ticket_nuevo', 'Ticket Nuevo'), ('ticket_respondido', 'Ticket Respondido'), ('ticket_cerrado', 'Ticket Cerrado')], max_length=50)),
                ('datos', models.JSONField(blank=True, null=True)),
                ('leida', models.BooleanField(default=False)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificaciones', to='condominio.usuario')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='HistorialReprogramacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('fecha_anterior', models.DateTimeField(help_text='Fecha anterior antes del cambio')),
                ('fecha_nueva', models.DateTimeField(help_text='Nueva fecha después del cambio')),
                ('motivo', models.TextField(blank=True, help_text='Motivo de la reprogramación', null=True)),
                ('notificacion_enviada', models.BooleanField(default=False, help_text='Si se envió notificación al cliente')),
                ('reserva', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historial_reprogramaciones', to='condominio.reserva')),
                ('reprogramado_por', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='condominio.usuario')),
            ],
            options={
                'verbose_name': 'Historial de Reprogramación',
                'verbose_name_plural': 'Historial de Reprogramaciones',
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Bitacora',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('accion', models.CharField(max_length=150)),
                ('descripcion', models.TextField(blank=True, null=True)),
                ('ip_address', models.CharField(blank=True, max_length=45, null=True)),
                ('usuario', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bitacoras', to='condominio.usuario')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CampaniaServicio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('campania', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='servicios', to='condominio.campania')),
                ('servicio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campanias', to='condominio.servicio')),
            ],
            options={
                'abstract': False,
                'unique_together': {('servicio', 'campania')},
            },
        ),
        migrations.CreateModel(
            name='ReservaVisitante',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('reserva', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='visitantes', to='condominio.reserva')),
                ('visitante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to='condominio.visitante')),
            ],
            options={
                'abstract': False,
                'unique_together': {('reserva', 'visitante')},
            },
        ),
    ]
